# -*- coding: utf-8 -*-
"""Exercício1_ARQ2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MH7uMC9Tr3VSrhEBx0vV8RatcnpRT66p

1)Suponha que estejamos considerando melhorar uma máquina adicionando a ela hardware vetorial. Quando um processamento é executado em modo vetor nesse hardware, é 10 vezes mais rápido do que o modo original de execução. Chamamos porcentagem de vetorização a porcentagem de tempo que seria gasta usando o modo vetorial. 

a)Que porcentagem de vetorização é necessária para atingir um ganho de velocidade de 2?

2= 1/((1-x)+x/10) x=5/9=0,56 ou 56%

b) Trace um gráfico que plote o ganho de velocidade como uma porcentagem do processamento realizada em modo vetor. Chame o eixo y de “Ganho médio de velocidade” e o eixo x de “porcentagem de vetorização”. Dica: defina ao menos 10 porcentagens de vetorização e encontre o ganho médio de velocidade para cada um deles, de forma a encontrar os pontos (x,y) do gráfico.
"""

from sympy import *

import matplotlib.pyplot as plt
import numpy as np

from sympy.plotting import *

x = Symbol('x')
y = Symbol('y')

def f(x): return (100 / (( 100 - x ) + x / 10))

x = np.linspace(0,100)  
plt.plot(x, f(x))

plt.title('Questão 1 item b')
plt.xlabel('Porcentagem de vetorização')
plt.ylabel('Ganho médio de velocidade')


plt.show()

"""2) Seja a figura abaixo, que apresenta um mix de instruções dinâmicas RISC-V para os programas SPECint2006. Calcule o CPI efetivo para uma implementação de uma CPU embarcada do RISC-V usando a média das frequências de instruções de astar e gcc como forma de obter um mix de instruções. Suponha que tenhamos realizado as seguintes medições do CPI médio para cada um dos tipos de instruções:

CPI = SOMATORIO DO Nº INSTRUÇÕES x CPI / Nº DE INSTRUÇÕES TOTAL

ASTAR = LOADS 28%, STORES 6%, DESVIOS 9%, SALTOS 2%, ALU 46%

CPIastar = (0.28 * 5 + 0.06 * 3 + 0.09 * 5 + 0.09 * 3 + 0.02 * 3 + 0.46 * 1) / 1
"""

x = (0.28 * 5 + 0.06 * 3 + 0.09 * 5 + 0.09 * 3 + 0.02 * 3 + 0.46 * 1) / 1
print(f'CPI médio da instrução astar: {x}')

"""GCC = LOADS 17%, STORES 23%, DESVIOS 20%, SALTOS 1%, ALU 36%

CPIgcc = (0.17 * 5 + 0.23 * 3 + 0.1 * 5 + 0.1 * 3 + 0.1 * 3 + 0.36 * 1)/ 1
"""

y =  (0.17 * 5 + 0.23 * 3 + 0.1 * 5 + 0.1 * 3 + 0.1 * 3 + 0.36 * 1)/ 1
print(f'CPI médio da instrução astar: {y}')

"""3) **PILHA**

A = B * D
Push B
Push D
Mult
Pop A

A = A + D
Push A
Push D
Add
Pop A

E = A - C
Push A
Push C
Sub
Pop E

**Acumulador**

A = B * D
Load B
Mult D
Store A

A = A + D
Load A
Add D
Store A

E = A - C
Load A
Sub C
Store E

**Registrador memória**

A = B * D
Load R1, B
Mult R3, R1, D
Store R3, A

A = A + D
Load R1, A
Add R3, R1, D
Store R3, A

E = A - C
Load R1, A
Sub R3, R1, C
Store E

**Registrador Registrador**

A = B * D
Load R1, B
Load R2, D
Mult R3, R1, R2
Store R3, A

A = A + D
Load R1, A
Load R2, D
Add R3, R1, R2
Store R3, A

E = A - C
Load R1, A
Load R1, B
Sub R3, R1, R2
Store R3, E


"""
